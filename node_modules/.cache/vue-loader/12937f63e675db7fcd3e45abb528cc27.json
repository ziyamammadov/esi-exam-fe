{"remainingRequest":"/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ziya/Development/Other/esi-project-vue/src/components/Customer.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ziya/Development/Other/esi-project-vue/src/components/Customer.vue","mtime":1652650878279},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/babel-loader/lib/index.js","mtime":1652517626201},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/ts-loader/index.js","mtime":1652517615040},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/cache-loader/dist/cjs.js","mtime":1652517625200},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/index.js","mtime":1652517614138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgQ3VzdG9tZXJTZXJ2aWNlIGZyb20gIkAvc2VydmljZXMvQ3VzdG9tZXJTZXJ2aWNlIjsKaW1wb3J0IHsgbmFtZXNwYWNlIH0gZnJvbSAidnVleC1jbGFzcyI7Cgpjb25zdCBBdXRoID0gbmFtZXNwYWNlKCJBdXRoIik7CgpAQ29tcG9uZW50CmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbWVyIGV4dGVuZHMgVnVlIHsKICBAQXV0aC5TdGF0ZSgidXNlciIpCiAgcHJpdmF0ZSBjdXJyZW50VXNlciE6IGFueTsKICBwcml2YXRlIGN1c3RvbWVyID0gbnVsbDsKICBwcml2YXRlIGlkID0gIiI7CgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmlkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgaWYgKCF0aGlzLmN1cnJlbnRVc2VyKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgIH0KICAgIGlmICh0aGlzLmlkKSB7CiAgICAgIHRoaXMuZ2V0Q3VzdG9tZXIoKTsKICAgIH0KICB9CiAgZ2V0Q3VzdG9tZXIoKSB7CiAgICBDdXN0b21lclNlcnZpY2UuZ2V0Q3VzdG9tZXIocGFyc2VJbnQodGhpcy5pZCkpLnRoZW4oCiAgICAgIChyZXNwb25zZSkgPT4gewogICAgICAgIHRoaXMuY3VzdG9tZXIgPSByZXNwb25zZS5kYXRhOwogICAgICB9LAogICAgICAoZXJyb3IpID0+IHsKICAgICAgICB0aGlzLmN1c3RvbWVyID0KICAgICAgICAgIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhKSB8fAogICAgICAgICAgZXJyb3IubWVzc2FnZSB8fAogICAgICAgICAgZXJyb3IudG9TdHJpbmcoKTsKICAgICAgfQogICAgKTsKICB9CgogIHNhdmVDdXN0b21lcigpIHsKICAgIGNvbnNvbGUubG9nKCJzYXZlIGNsaWNrZWQiKTsKICB9Cn0K"},{"version":3,"sources":["Customer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Customer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <header class=\"jumbotron\">\n      <h3>Edit customer</h3>\n    </header>\n    <div>\n      <label>Author: </label>\n      <input v-model=\"book.author\" class=\"form-control\" />\n    </div>\n    <div>\n      <label>Title: </label>\n      <input v-model=\"book.title\" class=\"form-control\" />\n    </div>\n    <div>\n      <label>Release Date: </label>\n      <input v-model=\"book.releaseDate\" class=\"form-control\" />\n    </div>\n    <div>\n      <label>status: </label>\n      <input v-model=\"book.status\" class=\"form-control\" />\n    </div>\n    <div>\n      <label>Language: </label>\n      <input v-model=\"book.language\" class=\"form-control\" />\n    </div>\n    <div>\n      <label>Categories: </label>\n      <input v-model=\"book.categories\" class=\"form-control\" />\n    </div>\n    <div>\n      <button class=\"btn btn-primary btn-block mt-2\" @click=\"saveCustomer()\">\n        Save\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport CustomerService from \"@/services/CustomerService\";\nimport { namespace } from \"vuex-class\";\n\nconst Auth = namespace(\"Auth\");\n\n@Component\nexport default class Customer extends Vue {\n  @Auth.State(\"user\")\n  private currentUser!: any;\n  private customer = null;\n  private id = \"\";\n\n  mounted() {\n    this.id = this.$route.params.id;\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n    if (this.id) {\n      this.getCustomer();\n    }\n  }\n  getCustomer() {\n    CustomerService.getCustomer(parseInt(this.id)).then(\n      (response) => {\n        this.customer = response.data;\n      },\n      (error) => {\n        this.customer =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n\n  saveCustomer() {\n    console.log(\"save clicked\");\n  }\n}\n</script>\n"]}]}