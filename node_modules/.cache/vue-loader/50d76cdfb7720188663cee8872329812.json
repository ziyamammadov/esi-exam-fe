{"remainingRequest":"/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ziya/Development/Other/esi-project-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ziya/Development/Other/esi-project-vue/src/components/Book.vue?vue&type=template&id=4d934a99&","dependencies":[{"path":"/Users/ziya/Development/Other/esi-project-vue/src/components/Book.vue","mtime":1653250463756},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/cache-loader/dist/cjs.js","mtime":1652517625200},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1652517614337},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/cache-loader/dist/cjs.js","mtime":1652517625200},{"path":"/Users/ziya/Development/Other/esi-project-vue/node_modules/vue-loader/lib/index.js","mtime":1652517614138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}